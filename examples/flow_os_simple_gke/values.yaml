netobserv-flow:
  enabled: true
  fullnameOverride: netobserv-flow

  env:
    - name: EF_LICENSE_ACCEPTED
      value: "true"
    - name: EF_OUTPUT_OPENSEARCH_INDEX_TEMPLATE_REPLICAS
      value: "0"
    - name: EF_INPUT_FLOW_BENCHMARK_ENABLE
      value: "false" # `false` is the default, keeping for ease of updating for testing
    - name: EF_OUTPUT_STDOUT_ENABLE
      value: "false" # `false` is the default, keeping for ease of updating for testing

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 1

  tolerations:
    - key: k8s.elastiflow.io/role
      operator: Equal
      value: elastiflow-spot
    - key: cloud.google.com/gke-spot
      operator: Equal
      value: "true"

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k8s.elastiflow.io/role
                operator: In
                values:
                  - elastiflow-spot
              - key: "cloud.google.com/machine-family"
                operator: "In"
                values: ["e2"]
              - key: "node.kubernetes.io/instance-type"
                operator: "In"
                # https://cloud.google.com/compute/vm-instance-pricing
                values: ["e2-standard-2", "e2-standard-4"]

  # Discourage to colocate the collector with opensearch
  topologySpreadConstraints:
    - maxSkew: 1
      minDomains: 2
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values: [opensearch, netobserv]

  service:
    annotations:
      cloud.google.com/neg: '{"ingress": true}'
      cloud.google.com/app-protocols: '{"api":"HTTP"}'
    ports:
      - port: 8080
        targetPort: 8080
        protocol: TCP
        name: api

  # TODO: Test ingress
  # ingress:
  #   enabled: true
  #   annotations:
  #     kubernetes.io/ingress.class: "gce-internal"
  #   rules:
  #     - host: your-store.example
  #       http:
  #         paths:
  #         - path: /products
  #           backend:
  #             service:
  #               name: netobserv
  #               port:
  #                 name: api

  outputOpenSearch:
    enable: true
    addresses: opensearch-cluster-master.elastiflow.svc.gke-main-a.us-east1:9200
    password: Elast1flow! # Insecure
    tls:
      enable: true
      skipVerification: true

    dashboards:
      provision: true
      dashboards_url: http://elastiflow-os-dashboards.elastiflow.svc.gke-main-a.us-east1:5601

  extraObjects:
    - |
      apiVersion: v1
      kind: Secret
      metadata:
        name: netobserv-tls
        labels:
          {{- include "netobserv.labels" . | nindent 4 }}
      type: kubernetes.io/tls
      data:
        tls.crt: {{ .Files.Get "tls/netobserv.crt" | b64enc }}
        tls.key: {{ .Files.Get "tls/netobserv.key" | b64enc }}

opensearch:
  enabled: true
  clusterName: elastiflow
  fullnameOverride: "elastiflow-os"
  singleNode: true
  replicas: 1
  opensearchJavaOpts: "-Xmx15500M -Xmx15500M"
  resources:
    requests:
      cpu: "6"
      memory: 16384Mi
    limits:
      cpu: "6"
      memory: 16384Mi

  persistence:
    storageClass: standard-rwo
    size: 50Gi
    labels:
      enabled: true

  extraEnvs:
  - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
    value: Elast1flow! # Insecure

  tolerations:
    - key: k8s.elastiflow.io/role
      operator: Equal
      value: elastiflow-spot
    - key: cloud.google.com/gke-spot
      operator: Equal
      value: "true"

  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: k8s.elastiflow.io/role
              operator: In
              values:
                - elastiflow-spot
            - key: "cloud.google.com/machine-family"
              operator: "In"
              values: ["e2"]
            - key: "node.kubernetes.io/instance-type"
              operator: "In"
              # https://cloud.google.com/compute/vm-instance-pricing
              values: ["e2-standard-2", "e2-standard-4", "e2-standard-8"]

opensearch-dashboards:
  enabled: true
  fullnameOverride: elastiflow-os-dashboards
  opensearchHosts: https://opensearch-cluster-master.elastiflow.svc.gke-main-a.us-east1:9200
  resources:
    requests:
      cpu: "1000m"
      memory: "768M"
    limits:
      cpu: "1000m"
      memory: "768M"

  config:
    ssl:
      verificationMode: none

  tolerations:
    - key: k8s.elastiflow.io/role
      operator: Equal
      value: elastiflow-spot
    - key: cloud.google.com/gke-spot
      operator: Equal
      value: "true"

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k8s.elastiflow.io/role
                operator: In
                values:
                  - elastiflow-spot
              - key: "cloud.google.com/machine-family"
                operator: "In"
                values: ["e2"]
              - key: "node.kubernetes.io/instance-type"
                operator: "In"
                # https://cloud.google.com/compute/vm-instance-pricing
                values: ["e2-standard-2", "e2-standard-4", "e2-standard-8"]

  service:
    annotations:
      cloud.google.com/neg: '{"ingress": true}'
      cloud.google.com/app-protocols: '{"http":"HTTP"}'
      cloud.google.com/backend-config: '{"default": "elastiflow-os-dashboards"}'

  extraObjects:
    # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#direct_health
    - apiVersion: cloud.google.com/v1
      kind: BackendConfig
      metadata:
        name: '{{ template "opensearch-dashboards.fullname" . }}'
      spec:
        healthCheck:
          checkIntervalSec: 60
          unhealthyThreshold: 2
          healthyThreshold: 3
          port: 5601
          type: HTTP
          requestPath: /app/login
    # Adding ingress as extraObjects due to the lack of the `defaultBackend` in the original OpenSearch chart
    - |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: {{ template "opensearch-dashboards.fullname" . }}
        labels:
          {{- include "opensearch-dashboards.labels" . | nindent 4 }}
          {{- with .Values.ingress.labels }}
            {{- toYaml . | nindent 4 }}
          {{- end }}
        annotations:
          kubernetes.io/ingress.class: "gce-internal"
      spec:
        defaultBackend:
          service:
            name: '{{ template "opensearch-dashboards.fullname" . }}'
            port:
              number: {{ .Values.service.port }}
        rules:
          - host: "chart-example.local"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: '{{ template "opensearch-dashboards.fullname" . }}'
                      port:
                        number: {{ .Values.service.port }}
