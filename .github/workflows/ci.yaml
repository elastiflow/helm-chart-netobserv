name: CI
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  pr_checks:
    name: PR Checks
    if: >-
      ${{
        github.event_name == 'pull_request'
        && !(github.event_name == 'pull_request' && github.event.pull_request.user.login == 'github-actions[bot]' && startsWith(github.event.pull_request.title, '[release netobserv-'))
      }}
    uses: elastiflow/gha-reusable/.github/workflows/reusable_pr_checks.yml@v0

  renovate_config_validator:
    name: renovate config validator
    runs-on: ubuntu-latest
    container:
      image: renovate/renovate:latest
      options: --user root # root is needed for checkout to work
    steps:
      - uses: actions/checkout@v4
      - name: Validate Renovate config
        run: renovate-config-validator --strict

  helm_checks:
    name: Run Helm sanity checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ["charts/netobserv-flow"]
        # TODO: Uncomment in follow-up
        # chart: ["charts/netobserv-flow", "charts/netobserv-os"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          check-latest: true
      - name: Build helm dependencies
        run: |
          (helm dependency list ${{ matrix.chart }} || true) | grep -E 'https://' | while read -r dep; do
            helm repo add $(echo ${dep} | awk '{print $1}') $(echo ${dep} | awk '{print $4}')
          done

          helm dependency build ${{ matrix.chart }}
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --chart-dirs ${{ matrix.chart }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --validate-maintainers=false --check-version-increment=false --chart-dirs ${{ matrix.chart }}
      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0
      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }} --helm-extra-set-args="--set EF_OUTPUT_STDOUT_ENABLE=true" --charts ${{ matrix.chart }}
